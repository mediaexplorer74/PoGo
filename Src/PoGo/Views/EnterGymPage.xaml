<Page xmlns:control="using:PokemonGo_UWP.Controls" 
    x:Class="PokemonGo_UWP.Views.EnterGymPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PokemonGo_UWP.Views"
    xmlns:controls="using:PokemonGo_UWP.Controls"
    xmlns:viewModels="using:PokemonGo_UWP.ViewModels"
    xmlns:entities="using:PokemonGo_UWP.Entities"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:EnterGymPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <Storyboard x:Name="ShowErrorMessageStoryboard">
            <DoubleAnimation x:Name="ShowErrorMessageAnimation"
                Storyboard.TargetName="ErrorMessageBorderTransform"
                Storyboard.TargetProperty="TranslateY"
                To="0"
                Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="HideErrorMessageStoryboard">
            <DoubleAnimation x:Name="HideErrorMessageAnimation"
                Storyboard.TargetName="ErrorMessageBorderTransform"
                Storyboard.TargetProperty="TranslateY"
                To="-60"
                BeginTime="0:0:5"
                Duration="0:0:0.2" />
        </Storyboard>

        <Storyboard x:Name="ShowSelectAttackTeamGridStoryboard">
            <FadeInThemeAnimation Storyboard.TargetName="SelectAttackTeamGrid"/>
            <DoubleAnimation x:Name="ShowAttackTeamGridAnimation"
                Storyboard.TargetName="SelectAttackTeamGridTransform"
                Storyboard.TargetProperty="TranslateY"
                To="0"
                Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Name="HideSelectAttackTeamGridStoryboard">
            <FadeOutThemeAnimation Storyboard.TargetName="SelectAttackTeamGrid"/>
            <DoubleAnimation x:Name="HideAttackTeamGridAnimation"
                Storyboard.TargetName="SelectAttackTeamGridTransform"
                Storyboard.TargetProperty="TranslateY"
                To="200"
                Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Name="ShowBattleUIGridStoryboard">
            <FadeInThemeAnimation Storyboard.TargetName="BattleUIGrid"/>
        </Storyboard>

        <Storyboard x:Name="HideBattleUIGridStoryboard">
            <FadeOutThemeAnimation Storyboard.TargetName="BattleUIGrid"/>
        </Storyboard>

        <Storyboard x:Name="ShowBattleRoundStoryboard">
            <DoubleAnimation x:Name="ShowBattleRoundAnimationX"
                             Storyboard.TargetName="BattleRoundTextBoxTransform"
                             Storyboard.TargetProperty="ScaleX"
                             From="1"
                             To="3"
                             Duration="0:0:0.5"/>
            <DoubleAnimation x:Name="ShowBattleRoundAnimationY"
                             Storyboard.TargetName="BattleRoundTextBoxTransform"
                             Storyboard.TargetProperty="ScaleY"
                             From="1"
                             To="3"
                             Duration="0:0:0.5"/>
            <FadeOutThemeAnimation x:Name="FadeBattleRoundAnimation"
                                   Storyboard.TargetName="BattleRoundTextBox"
                                   BeginTime="0:0:0.2"
                                   Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Name="ShowBattleRoundResultStoryboard">
            <DoubleAnimation x:Name="ShowBattleRoundResultAnimationX"
                             Storyboard.TargetName="BattleRoundResultTextBoxTransform"
                             Storyboard.TargetProperty="ScaleX"
                             From="1"
                             To="3"
                             Duration="0:0:0.5"/>
            <DoubleAnimation x:Name="ShowBattleRoundResultAnimationY"
                             Storyboard.TargetName="BattleRoundResultTextBoxTransform"
                             Storyboard.TargetProperty="ScaleY"
                             From="1"
                             To="3"
                             Duration="0:0:0.5"/>
            <FadeOutThemeAnimation x:Name="FadeBattleRoundResultAnimation"
                                   Storyboard.TargetName="BattleRoundResultTextBox"
                                   BeginTime="0:0:0.2"
                                   Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Name="ShowBattleOutcomeStoryboard">
            <FadeInThemeAnimation Storyboard.TargetName="BattleOutcomeGrid"/>
        </Storyboard>

        <Storyboard x:Name="HideBattleOutcomeStoryboard">
            <FadeOutThemeAnimation Storyboard.TargetName="BattleOutcomeGrid"/>
        </Storyboard>

        <Storyboard x:Name="AnimateDefendingStoryboardUp">
            <DoubleAnimation x:Name="DefenderPokemonAnimationUp"
                             Storyboard.TargetName="DefenderPokemonTransform"
                             Storyboard.TargetProperty="TranslateY"
                             To="-20"
                             Duration="0:0:0.2"/>
            <FadeInThemeAnimation Storyboard.TargetName="CurrentDefendTypeText"/>
            <DoubleAnimation Storyboard.TargetName="DefenderTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-40"
                             To="-80"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateDefendingStoryboardDown">
            <DoubleAnimation x:Name="DefenderPokemonAnimationDown"
                             Storyboard.TargetName="DefenderPokemonTransform"
                             Storyboard.TargetProperty="TranslateY"
                             To="0"
                             Duration="0:0:0.2"/>
            <FadeOutThemeAnimation Storyboard.TargetName="CurrentDefendTypeText"/>
            <DoubleAnimation Storyboard.TargetName="DefenderTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-80"
                             To="-100"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateDefendingStoryboardLeft">
            <DoubleAnimation x:Name="DefenderPokemonAnimationLeft"
                             Storyboard.TargetName="DefenderPokemonTransform"
                             Storyboard.TargetProperty="TranslateX"
                             To="-20"
                             Duration="0:0:0.2"/>
            <FadeInThemeAnimation Storyboard.TargetName="CurrentDefendTypeText"/>
            <DoubleAnimation Storyboard.TargetName="DefenderTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-40"
                             To="-80"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateDefendingStoryboardRight">
            <DoubleAnimation x:Name="DefenderPokemonAnimationRight"
                             Storyboard.TargetName="DefenderPokemonTransform"
                             Storyboard.TargetProperty="TranslateX"
                             To="0"
                             Duration="0:0:0.2"/>
            <FadeOutThemeAnimation Storyboard.TargetName="CurrentDefendTypeText"/>
            <DoubleAnimation Storyboard.TargetName="DefenderTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-80"
                             To="-100"
                             Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Name="AnimateAttackingStoryboardUp">
            <DoubleAnimation x:Name="AttackerPokemonAnimationUp"
                             Storyboard.TargetName="AttackerPokemonTransform"
                             Storyboard.TargetProperty="TranslateY"
                             To="-20"
                             Duration="0:0:0.2"/>
            <FadeInThemeAnimation Storyboard.TargetName="CurrentAttackTypeText"/>
            <DoubleAnimation Storyboard.TargetName="AttackerTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-40"
                             To="-80"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateAttackingStoryboardDown">
            <DoubleAnimation x:Name="AttackerPokemonAnimationDown"
                             Storyboard.TargetName="AttackerPokemonTransform"
                             Storyboard.TargetProperty="TranslateY"
                             To="0"
                             Duration="0:0:0.2"/>
            <FadeOutThemeAnimation Storyboard.TargetName="CurrentAttackTypeText"/>
            <DoubleAnimation Storyboard.TargetName="AttackerTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-80"
                             To="-100"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateAttackingStoryboardLeft">
            <DoubleAnimation x:Name="AttackerPokemonAnimationLeft"
                             Storyboard.TargetName="AttackerPokemonTransform"
                             Storyboard.TargetProperty="TranslateX"
                             To="-20"
                             Duration="0:0:0.2"/>
            <FadeInThemeAnimation Storyboard.TargetName="CurrentAttackTypeText"/>
            <DoubleAnimation Storyboard.TargetName="AttackerTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-40"
                             To="-80"
                             Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Name="AnimateAttackingStoryboardRight">
            <DoubleAnimation x:Name="AttackerPokemonAnimationRight"
                             Storyboard.TargetName="AttackerPokemonTransform"
                             Storyboard.TargetProperty="TranslateX"
                             To="0"
                             Duration="0:0:0.2"/>
            <FadeOutThemeAnimation Storyboard.TargetName="CurrentAttackTypeText"/>
            <DoubleAnimation Storyboard.TargetName="AttackerTypeTransform"
                             Storyboard.TargetProperty="TranslateY"
                             From="-80"
                             To="-100"
                             Duration="0:0:0.2"/>
        </Storyboard>

        <DataTemplate x:Key="TeamMemberTemplate" x:DataType="entities:PokemonDataWrapper">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock x:Name="CPTextBlock"
                                   Grid.Row="0"
                                   HorizontalAlignment="Center">
                                           <Run x:Uid="CpTextBlock"
                                                FontFamily="{StaticResource LatoMediumFont}"
                                                FontSize="11"
                                                Foreground="{StaticResource LightGrayTextColor}"
                                                Text="WP" />
                                           <Run FontFamily="{StaticResource LatoBoldFont}"
                                                FontSize="16"
                                                Foreground="{StaticResource LightTitleTextColor}"
                                                Text="{x:Bind Cp}" />
                </TextBlock>
                <Grid Grid.Row="1" BorderThickness="1" CornerRadius="5" Width="80" Height="80">
                    <Grid.BorderBrush>
                        <SolidColorBrush Color="LightBlue"/>
                    </Grid.BorderBrush>
                    <Image x:Name="PokemonImage"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               Margin="0"
                               Source="{x:Bind PokemonId, Converter={StaticResource PokemonIdToPokemonSpriteConverter}}"
                               x:Phase="2" />
                    <ProgressBar x:Name="StaminaProgress"
                                     Value="{x:Bind Stamina}"
                                     Maximum="{x:Bind StaminaMax}"
                                     Margin="5,0,5,0"
                                     Height="3"
                                     Style="{StaticResource PokemonHPProgressBarStyle}"
                                     Foreground="#6ee8b7"
                                     IsIndeterminate="False"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Bottom"
                                     x:Phase="1" />
                </Grid>
                <Viewbox Grid.Row="2"
                                 Margin="3,5,3,0"
                                 StretchDirection="DownOnly">
                    <TextBlock x:Name="NameTextBlock"
                                       HorizontalAlignment="Center"
                                       FontFamily="{StaticResource LatoBoldFont}"
                                       FontSize="11"
                                       Foreground="{StaticResource LightGrayTextColor}"
                                       Text="{x:Bind Name}" />
                </Viewbox>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="GymUI">
        <control:OutdoorBackground />

        <!--Back Screen -->
        <Grid>
            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,80,0,50"
                    Background="#88333333" BorderThickness="0,3,0,4"
                    BorderBrush="{Binding CurrentGym.OwnedByTeam, Converter={StaticResource PlayerTeamToTeamColorBrushConverter}}">
                <Border.RenderTransform>
                    <SkewTransform CenterX="300" AngleY="-10"></SkewTransform>
                </Border.RenderTransform>
            </Border>
        </Grid>

        <!--Memberships-->
        <local:GymMembersControl x:Name="GymMembersControl" 
                                 GymMemberships="{Binding GymMemberships}" 
                                 CurrentGym="{Binding CurrentGym}"
                                 UltimatePokemon="{Binding UltimatePokemon}"/>

        <!--Label-->
        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <!--Location-->
            <Border Background="#88333333" BorderBrush="Gray" BorderThickness="1" 
                Height="70" Margin="40,10,10,10" CornerRadius="15">
                <Grid Margin="56,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition  Height="1*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" VerticalAlignment="Bottom" Foreground="#DDDDDD" FontSize="12" 
                               Text="{Binding CurrentGymInfo.Name}"></TextBlock>
                    <TextBlock Grid.Row="1" VerticalAlignment="Center"
                               Foreground="#DDDDDD" FontSize="16" >
                        <Run Text="Gym level"></Run>
                        <Run Text="{Binding GymLevel}"/>
                    </TextBlock>
                </Grid>
            </Border>
            <Grid HorizontalAlignment="Left" Width="82" Height="82" Margin="4,0,0,0">
                <Ellipse Fill="White" Stroke="#66000000" StrokeThickness="3">
                </Ellipse>
                <Ellipse Width="72" Height="72">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding CurrentGymInfo.Urls[0]}"
                                    Stretch="UniformToFill" />
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>
            <!--TODO In official app, there is a gauge behind gym's picture. Don't know what is it-->
            <!--Prestige-->
            <Border Grid.Row="1" 
                    BorderBrush="{Binding CurrentGym.OwnedByTeam, Converter={StaticResource PlayerTeamToTeamColorBrushConverter}}" 
                    BorderThickness="0,0,0,6" CornerRadius="5"
                    HorizontalAlignment="Left" Margin="-5">
                <Border Background="#88333333" CornerRadius="5" >
                    <TextBlock x:Name="GymXP" Margin="16,2,10,2" FontSize="16" Opacity="0.8"
                               Foreground="{Binding CurrentGym.OwnedByTeam, Converter={StaticResource PlayerTeamToTeamColorBrushConverter}}">
                        <Run Text="{Binding CurrentGymState.FortData.GymPoints}"></Run>
                        <Run Text=" / "></Run>
                        <Run Text="{Binding GymPrestigeFull}"/>
                    </TextBlock>
                </Border>
            </Border>
        </Grid>

        <!--Buttons & Message-->
        <Grid x:Name="ButtonBar" VerticalAlignment="Bottom" Margin="0,0,0,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!-- Command Buttons -->
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Width="80" Height="80" Grid.Column="0" 
                    Command="{Binding DeployPokemonCommand}"
                    Visibility="{Binding DeployPokemonCommandVisibility}"
                    IsEnabled="{Binding DeployCommandButtonEnabled}"
                    Style="{ThemeResource ImageButtonStyle}">
                <Image Source="/Assets/Buttons/btn_claim.png"></Image>
            </Button>
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Width="60" Height="60" Grid.Column="1"
                    Command="{Binding AbandonGym}"
                    Style="{ThemeResource ImageButtonStyle}">
                <Image Source="/Assets/Buttons/btn_close_normal.png" />
            </Button>
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Width="80" Height="80" Grid.Column="2"
                    Command="{Binding TrainCommand}"
                    IsEnabled="{Binding TrainCommandButtonEnabled}"
                    Visibility="{Binding TrainCommandVisibility}"
                    Style="{ThemeResource ImageButtonStyle}">
                    <Image Source="/Assets/Buttons/btn_train.png"></Image>
            </Button>
            <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Width="80" Height="80" Grid.Column="2"
                    Command="{Binding FightCommand}"
                    IsEnabled="{Binding BattleCommandButtonEnabled}"
                    Visibility="{Binding FightCommandVisibility}"
                    Style="{ThemeResource ImageButtonStyle}">
                <Image Source="/Assets/Buttons/btn_attack.png"></Image>
            </Button>
        </Grid>

        <!--Error messages-->
        <Border Grid.Row="0"
                x:Name="OutOfRangeMessageBorder"
                Visibility="{Binding OutOfRangeMessageBorderVisibility}"
                VerticalAlignment="Bottom"
                CornerRadius="10" Height="20"
                Margin="40,0,40,100">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#cc0000" Offset="0"/>
                    <GradientStop Color="#660000" Offset="0.8"/>
                </LinearGradientBrush>
            </Border.Background>
            <TextBlock x:Name="GymTooFarAwayTextBlock"
                       x:Uid="GymTooFarAwayTextBlock"
                       Text="This Gym is too far away."
                       Style="{StaticResource TextError}"
                       VerticalAlignment="Center"
                       FontSize="12"/>
        </Border>
        <Border Grid.Row="0"
                    x:Name="ErrorMessageBorder"
                    Visibility="Collapsed"
                    VerticalAlignment="Top">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#cc0000" Offset="0" />
                    <GradientStop Color="#660000" Offset="0.8" />
                </LinearGradientBrush>
            </Border.Background>
            <Border.RenderTransform>
                <CompositeTransform x:Name="ErrorMessageBorderTransform" TranslateY="-60" />
            </Border.RenderTransform>
            <StackPanel>
                <TextBlock x:Name="ErrorMessageText"
                           Style="{StaticResource TextError}"
                           Visibility="Collapsed"
                           Margin="15,20,15,20"/>
                <TextBlock x:Name="OutOfRangeTextBlock"
                        x:Uid="OutOfRangeTextBlock"
                        Text="You are out of range"
                        Visibility="Collapsed"
                        Style="{StaticResource TextError}"
                        Margin="15,20,15,20" />

                <TextBlock x:Name="CooldownTextBlock"
                           x:Uid="CooldownTextBlock"
                           Text="You have to wait some time"
                           Visibility="Collapsed"
                           Style="{StaticResource TextError}"
                           Margin="15,20,15,20" />

                <TextBlock x:Name="InventoryFullTextBlock"
                           x:Uid="InventoryFullTextBlock"
                           Visibility="Collapsed"
                           Style="{StaticResource TextError}"
                           Margin="15,20,15,20" />
            </StackPanel>
        </Border>

        <!--Select Attack team-->
        <Grid x:Name="SelectAttackTeamGrid"
              VerticalAlignment="Bottom" Height="280" Margin="5,0,5,0"
              Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="4"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
                <CompositeTransform x:Name="SelectAttackTeamGridTransform" TranslateY="200"/>
            </Grid.RenderTransform>
            <Image Grid.RowSpan="3" Source="/Assets/Backgrounds/ui_bg_purple_02.png" Stretch="Fill" Opacity="0.95" />

            <Border Grid.Row="0" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    Margin="0" 
                    BorderThickness="0,2,0,0"
                    BorderBrush="{Binding CurrentGym.OwnedByTeam, Converter={StaticResource PlayerTeamToTeamColorBrushConverter}}">
            </Border>
            <Border Grid.Row="0" 
                    VerticalAlignment="Stretch" 
                    Margin="0" Width="100"
                    BorderThickness="0,4,0,0"
                    BorderBrush="{Binding CurrentGym.OwnedByTeam, Converter={StaticResource PlayerTeamToTeamColorBrushConverter}}">
            </Border>

            <!--Content-->
            <GridView x:Name="SelectedAttackTeamMembersGridView"
                  Grid.Row="1" Grid.RowSpan="2"
                  ItemsSource="{Binding AttackTeamMembers, Mode=OneWay}"
                  ScrollViewer.HorizontalScrollMode="Disabled"
                  ScrollViewer.VerticalScrollMode="Disabled"
                  ItemTemplate="{StaticResource TeamMemberTemplate}">
                <GridView.ItemContainerStyle>
                    <Style TargetType="GridViewItem">
                        <Setter Property="Margin"
                            Value="5,5" />
                        <Setter Property="MaxWidth"
                            Value="115" />
                        <Setter Property="MaxHeight"
                            Value="115" />
                    </Style>
                </GridView.ItemContainerStyle>
                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal"
                                   HorizontalAlignment="Center" />
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:InvokeCommandAction Command="{Binding Path=TeamSelectorSwitchCommand, Mode=OneWay}"
                                              InputConverter="{StaticResource TappedRoutedEventArgsToClickedItemConverter}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </GridView>


            <Grid Name="SelectAttackTeamButtonBar" Grid.Row="2" VerticalAlignment="Bottom" Margin="0,0,0,8">
                <Button HorizontalAlignment="Left" VerticalAlignment="Center"
                        Width="60" Height="60" Margin="8,0,0,0"
                        Command="{Binding AutoSelectCommand}"
                        Style="{ThemeResource ImageButtonStyle}">
                    <Image Source="/Assets/Buttons/btn_swap.png"/>
                </Button>
                <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Width="60" Height="60" 
                        Command="{Binding CloseAttackTeamSelectionCommand}"
                        Style="{ThemeResource ImageButtonStyle}">
                    <Image Source="/Assets/Buttons/btn_close_normal.png" />
                </Button>
                <Button HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Width="60" Height="60" Margin="0,0,8,0"
                        Command="{Binding GoCommand}"
                        Style="{ThemeResource ImageButtonStyle}">
                    <Image Source="/Assets/Buttons/btn_go.png" />
                </Button>

            </Grid>

        </Grid>

        <!--Battle UI-->
        <Grid x:Name="BattleUIGrid"
              Visibility="Collapsed">
            <Grid.Background>
                    <ImageBrush ImageSource="ms-appx:///Assets/Backgrounds/Park.png"
                                Stretch="UniformToFill" />
            </Grid.Background>
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Name, StaminaBar and CP value to both Pokemons, remaining time in between -->
                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="5">
                    <TextBlock Text="{Binding CurrentAttackerPokemon.WrappedData, Converter={StaticResource PokemonDataToPokemonNameConverter}}"
                               Foreground="White"/>
                    <ProgressBar x:Name="AttackerStaminaProgressBar" Maximum="{Binding CurrentAttackerBattlePokemon.PokemonData.StaminaMax}" Value="{Binding CurrentAttackerBattlePokemon.CurrentHealth}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <TextBlock Text="CP " Foreground="White" FontSize="12" VerticalAlignment="Bottom"/>
                        <TextBlock Text="{Binding CurrentAttackerPokemon.Cp}" Foreground="White" FontSize="16" VerticalAlignment="Bottom"/>
                    </StackPanel>
                </StackPanel>
                <TextBlock Grid.Row="0" Grid.Column="1" 
                           Style="{StaticResource TitleTextBlockStyle}" 
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Foreground="White" FontWeight="Bold"
                           Text="{Binding RemainingBattleTime}"/>
                <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Vertical" Margin="5">
                    <TextBlock Text="{Binding CurrentDefenderPokemon.WrappedData, Converter={StaticResource PokemonDataToPokemonNameConverter}}"
                               Foreground="White"/>
                    <ProgressBar x:Name="DefenderStaminaProgressBar" Maximum="{Binding CurrentDefenderBattlePokemon.PokemonData.StaminaMax}" Value="{Binding CurrentDefenderBattlePokemon.CurrentHealth}"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="CP " Foreground="White" FontSize="12" VerticalAlignment="Bottom"/>
                        <TextBlock Text="{Binding CurrentDefenderPokemon.Cp}" Foreground="White" FontSize="16" VerticalAlignment="Bottom"/>
                    </StackPanel>
                </StackPanel>

                <!-- The two currently fighting Pokemons -->
                <Grid Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="2"
                           Source="{Binding CurrentDefenderPokemon.PokemonId, Converter={StaticResource PokemonIdToPokemonSpriteConverter}}">
                        <Image.RenderTransform>
                            <CompositeTransform x:Name="DefenderPokemonTransform"/>
                        </Image.RenderTransform>
                    </Image>
                    <TextBlock x:Name="CurrentDefendTypeText" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="2"
                               Text="{Binding CurrentDefendType}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontWeight="Bold">
                        <TextBlock.RenderTransform>
                            <CompositeTransform x:Name="DefenderTypeTransform"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <Image Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                           Source="{Binding CurrentAttackerPokemon.PokemonId, Converter={StaticResource PokemonIdToPokemonSpriteConverter}}">
                        <Image.RenderTransform>
                            <CompositeTransform x:Name="AttackerPokemonTransform"/>
                        </Image.RenderTransform>
                    </Image>
                    <TextBlock x:Name="CurrentAttackTypeText" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                               Text="{Binding CurrentAttackType}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" FontWeight="Bold">
                        <TextBlock.RenderTransform>
                            <CompositeTransform x:Name="AttackerTypeTransform"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <!-- Out of order: We are botting the attacks for now
                    <StackPanel Grid.Row="3" Orientation="Vertical">
                        <Button Command="{Binding DodgeCommand}" Content="Dodge" Margin="5"/>
                        <Button Command="{Binding AttackCommand}" Content="Attack" Margin="5"/>
                        <Button Command="{Binding SpecialAttackCommand}" Content="Special" Margin="5"/>
                    </StackPanel>
                    -->
                </Grid>
                      
                <!-- Buttons to abandon the fight and to change the current pokemon -->
                <StackPanel Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Margin="5">
                    <Button HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Width="60" Height="60"
                        Command="{Binding AbandonAttackCommand}"
                        Style="{ThemeResource ImageButtonStyle}">
                        <Image Source="/Assets/Buttons/btn_run_away.png"></Image>
                    </Button>
                    <Button HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Width="60" Height="60" IsEnabled="False"
                        Command="{Binding SwitchTeamMembersCommand}"
                        Style="{ThemeResource ImageButtonStyle}"
                        Opacity="0.5">
                        <Image Source="/Assets/Buttons/btn_swap.png"></Image>
                    </Button>
                </StackPanel>

                <TextBlock x:Name="BattleRoundTextBox" Grid.Row="1" Grid.ColumnSpan="3"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontSize="24" Foreground="White">
                    <TextBlock.RenderTransform >
                        <ScaleTransform x:Name="BattleRoundTextBoxTransform" 
                                        ScaleX="1" CenterX="0.5" 
                                        ScaleY="1" CenterY="0.5"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock x:Name="BattleRoundResultTextBox" Grid.Row="1" Grid.ColumnSpan="3"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontSize="24" Foreground="White">
                    <TextBlock.RenderTransform >
                        <ScaleTransform x:Name="BattleRoundResultTextBoxTransform" 
                                        ScaleX="1" CenterX="0.5" 
                                        ScaleY="1" CenterY="0.5"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Grid>
        </Grid>

        <!-- BattleOutcomeGrid -->
        <Grid x:Name="BattleOutcomeGrid"
              Background="{StaticResource PageBackgroundGradient}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <TextBlock x:Name="BattleOutcome" Grid.Row="0" HorizontalAlignment="Center" FontSize="20" Margin="20"/>

            <StackPanel Grid.Row="1" HorizontalAlignment="Center" Margin="20,10">
                <TextBlock Foreground="#444444" FontSize="16" HorizontalAlignment="Center" 
                           Text="{Binding CurrentGymInfo.Name}" />
                <TextBlock Foreground="#444444" FontSize="16"  HorizontalAlignment="Center">
                        <Run Text="Gym level"/>
                        <Run Text="{Binding GymLevel}"/>
                </TextBlock>
            </StackPanel>

            <Grid Grid.Row="2" HorizontalAlignment="Center" Margin="20">
                <Grid HorizontalAlignment="Left" Width="120" Height="120" Margin="4,0,0,0">
                    <Ellipse Fill="White" Stroke="#66000000" StrokeThickness="3">
                    </Ellipse>
                    <Ellipse Width="110" Height="110">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding CurrentGymInfo.Urls[0]}"
                                    Stretch="UniformToFill" />
                        </Ellipse.Fill>
                    </Ellipse>
                    <Grid x:Name="PointsGrid"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="60"
                          Height="20"
                          CornerRadius="8"
                          BorderThickness="2"
                          BorderBrush="White">
                        <Rectangle x:Name="BackgroundRect"
                                    Fill="White">
                        </Rectangle>
                        <TextBlock x:Name="TotalGymPrestigeDelta"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="0,0,0,0">
                        </TextBlock>
                    </Grid>
                </Grid>
            </Grid>

            <StackPanel Grid.Row="3" HorizontalAlignment="Center" Margin="20,10">
                <TextBlock Foreground="#444444" Text="Gym Prestige"/>
                <TextBlock Foreground="#444444" FontSize="16">
                    <Run Text="{Binding NewGymPoints}"/>
                    <Run Text=" / "/>
                    <Run Text="{Binding GymPrestigeFull}"/>
                </TextBlock>
            </StackPanel>

            <Grid Grid.Row="4" HorizontalAlignment="Center" Margin="0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="100"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="XP" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="1" x:Name="TotalPlayerXpEarned" HorizontalAlignment="Right" Foreground="Red"/>

                <TextBlock Grid.Row="1" Text="Pokémon Defeated:" HorizontalAlignment="Left"/>
                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="PokemonDefeated" HorizontalAlignment="Right" Foreground="Red"/>
            </Grid>

            <Button Grid.Row="5" Command="{Binding CloseBattleOutcomeCommand}"
                Style="{StaticResource ButtonCircle}"
                VerticalAlignment="Bottom"
                Margin="0,0,0,21">
                <Image Source="ms-appx:///Assets/Buttons/btn_close.png" />
            </Button>
        </Grid>
        
        <!--Dialog to select a pokemon to replace a team member -->
        <Grid x:Name="SelectPokemonGrid" 
              Background="{StaticResource PageBackgroundGradient}"
              Visibility="Collapsed">
            <Border Margin="8,0"
                Background="{StaticResource LightPageBackgroundGradient}">
                <!--Content-->
                <Pivot x:Name="SelectPokemonPanel"
                   Margin="0,10,0,0"
                   Style="{StaticResource PokemonInventoryPivotStyle}">
                    <PivotItem x:Name="PokemonsPivot"
                           Margin="8,0">
                        <PivotItem.Header>
                            <controls:PoGoPivotHeader x:Uid="PokemonHeader"
                                              Title="POKÉMON"
                                              DataCurrent="{Binding TotalPokemonCount}"
                                              DataMaximum="{Binding PlayerProfile.MaxPokemonStorage}" />
                        </PivotItem.Header>
                        <local:PokemonInventoryControl x:Name="PokemonInventorySelector"
                                                   PokemonInventory="{Binding PokemonInventory}"
                                                   PokemonSelectedCommand="{Binding SelectPokemonCommand}"    
                                                   SortingMode="{Binding CurrentPokemonSortingMode, Mode=TwoWay}" />
                    </PivotItem>
                </Pivot>
            </Border>

            <!--Close Button -->
            <Button Command="{Binding ClosePokemonSelectCommand}"
                Style="{StaticResource ButtonCircle}"
                VerticalAlignment="Bottom"
                Margin="0,0,0,21">
                <Image Source="ms-appx:///Assets/Buttons/btn_close.png" />
            </Button>
        </Grid>
    </Grid>
</Page>
